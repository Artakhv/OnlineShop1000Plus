<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnlineShop.Api</name>
    </assembly>
    <members>
        <member name="M:OnlineShop.Api.Controllers.CartController.Cart(System.Int32)">
            <summary>
            shows the cart of the user
            </summary>
            <param name="userId">id of the user</param>
            <returns>cart of the user</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CartController.AddToCart(System.Int32,System.Int32)">
            <summary>
            adds an item to the cart
            </summary>
            <param name="userId">id of the user</param>
            <param name="itemId">id of the item to be added to the cart</param>
            <returns>resulted cart</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CartController.Remove(System.Int32,System.Int32)">
            <summary>
            removes an item from the cart
            </summary>
            <param name="userId">id of the user></param>
            <param name="itemId">id of the item to be removed</param>
            <returns>resulted cart</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CartController.OrderHistory(System.Int32)">
            <summary>
            shows order history of the user
            </summary>
            <param name="userid">id of the user</param>
            <returns>order history, if available</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CartController.PlaceOrder(System.Int32)">
            <summary>
            places a new order from an existing user cart
            </summary>
            <param name="cartId">id of the cart to be ordered</param>
            <returns>order, if successful</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CartController.CancelOrder(System.Int32)">
            <summary>
            removes a placed order within 1 hour after being ordered
            </summary>
            <param name="orderId">id of the order to be removed</param>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CategoryController.Categories(System.Int32,System.Int32)">
            <summary>
            gets all categories
            </summary>
            <param name="count">count of categories per page</param>
            <param name="page">page number</param>
            <returns>all existing categories</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CategoryController.Category(System.Int32)">
            <summary>
            gets a category by Id
            </summary>
            <param name="id">id of the category</param>
            <returns>the category, if exists</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CategoryController.AddCategory(OnlineShop.Common.DbModels.Categories)">
             <summary>
             adds a category
             </summary>
             <param name="categoryModel">category model for add</param>
             <remarks>
             sample request (this request adds new address)\
             POST  /category/addcategory\
             {\
                 "Name" : "sampleName",\
            }
             </remarks>>
             <returns>added category</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CategoryController.UpdateCategory(OnlineShop.Common.DbModels.Categories,System.Int32)">
             <summary>
             updates existing category
             </summary>
             <param name="newCategoryModel">new info to update</param>
             <param name="oldId">id of the category to be updated</param>
             <remarks>
             sample request (this request adds new address)\
             PUT  /category/updatecategory\
             {\
                 "Name" : "sampleName",\
            }
             </remarks>>
             <returns>updated category</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.CategoryController.RemoveCategory(System.Int32)">
            <summary>
            removes a category by Id
            </summary>
            <param name="id">id of the category to be removed</param>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ItemsController.Items(System.Int32,System.Int32)">
            <summary>
            gets all items
            </summary>
            <param name="count">count of items per page</param>
            <param name="page">page number</param>
            <returns>all available items</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ItemsController.ItemsOfProduct(System.Int32,System.Int32,System.Int32)">
            <summary>
            gets all items of the specific product
            </summary>
            <param name="count">count of items per page</param>
            <param name="page">page number</param>
            <param name="prodId">id of the product</param>
            <returns>all available items of the product</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ItemsController.Item(System.Int32)">
            <summary>
            gets an item by Id
            </summary>
            <param name="id">id of the item</param>
            <returns>item, if exists</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ItemsController.CreateItem(OnlineShop.Common.DbModels.Items)">
             <summary>
             adds a new item
             </summary>
             <param name="itemModel">item info model</param>
             <remarks>
             POST  /items/createitem\
             {\
                 "ProductId" : "sampleProductId"\
                 "Color" : "sampleColor",\
                 "Size" : "sampleSize",\
                 "Quantity" : "sampleQuantity",\
                 "Image" : "sampleImage",\
            }
             </remarks>
             <returns>created item</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ItemsController.EditItem(OnlineShop.Common.DbModels.Items,System.Int32)">
             <summary>
             updates item info
             </summary>
             <param name="itemModel">new item properties</param>
             <param name="itemId">id of the item to be edited</param>
             <returns>updated item</returns>
             <remarks>
             sample request (this request adds new address)\
             PUT  /items/edititem\
             {\
                 "ProductId" : "sampleProductId"\    
                 "Color" : "sampleColor",\
                 "Size" : "sampleSize",\
                 "Quantity" : "sampleQuantity",\
                 "Image" : "sampleImage",\
            }
             </remarks>
             <returns>updated item</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ItemsController.RemoveItem(System.Int32)">
            <summary>
            deletes existing item
            </summary>
            <param name="id">id of the item to be deleted</param>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ProductController.Products(System.Int32,System.Int32)">
            <summary>
            gets all products
            </summary>
            <param name="count">count of products per page</param>
            <param name="page">page number</param>
            <returns>all available products</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ProductController.ProductsInCategory(System.Int32,System.Int32,System.Int32)">
            <summary>
            get all products in the selected category
            </summary>
            <param name="count">count of products per page</param>
            <param name="page">page number</param>
            <param name="catId">id of the category selected</param>
            <returns>all available products in the category</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ProductController.Product(System.Int32)">
            <summary>
            gets a product by id
            </summary>
            <param name="id">id of the product</param>
            <returns>the produxt, if exists</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ProductController.AddProduct(OnlineShop.Common.DbModels.Products)">
             <summary>
             adds new product
             </summary>
             <param name="product">product specific properties</param>
             <remarks>
             sample request (this request adds new address)\
             POST  /product/addproduct\
             {\
                 "Name" : "sampleName",\
                 "Description" : "sampleDescription",\
                 "CategoryId" : "sampleCategoryId",\
                 "Price" : "samplePrice",\
            }
             </remarks>>
             <returns>new product</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ProductController.EditProduct(OnlineShop.Common.DbModels.Products,System.Int32)">
             <summary>
             updated the product
             </summary>
             <param name="product">update info model</param>
             <param name="oldId">idof the product to be updated</param>
             <remarks>
             PUT  /product/editproduct\
             {\
                 "Name" : "sampleName",\
                 "Description" : "sampleDescription",\
                 "CategoryId" : "sampleCategoryId",\
                 "Price" : "samplePrice",\
            }
             </remarks>
             <returns>updated product</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.ProductController.DeleteProduct(System.Int32)">
            <summary>
            deletes existing product by Id
            </summary>
            <param name="id">product id</param>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.Login(OnlineShop.Common.AuthModels.AuthenticateModel)">
             <summary>
             logs in a registered user
             </summary>
             <param name="model">the login form model, from body</param>
             <returns>the logged-in user</returns>
             <response code = "200">returns the logged-in user</response>
             <remarks>
             sample request (this request logs in a registered user)\
             POST  /users/login\
             {\
                 "Email" : "sampleEmail",\
                 "Password" : "samplePassword"\
            }
             </remarks>>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.Register(OnlineShop.Common.AuthModels.AuthorizeModel)">
             <summary>
             registers new user
             </summary>
             <param name="model">the register form model, from body</param>
             <returns>the registered user</returns>
             <response code = "200">returns the registered user</response>
             <remarks>
             sample request (this request registers new user)\
             POST  /users/register\
             {\
                 "Username" : "sampleUsername",\
                 "Email" : "sampleEmail",\
                 "FirstName" : "sampleFirstName",\
                 "LastName" : "sampleLastName",\
                 "Password" : "samplePassword",\
                 "ConfirmPassword" : "samplePassword",
            }
             </remarks>>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.Users(System.Int32,System.Int32)">
            <summary>
            returns all users
            </summary>
            <param name="count">count of users per page</param>
            <param name="page">page number</param>
            <returns>all registered users</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.User(System.String)">
            <summary>
            returns a user by username
            </summary>
            <param name="username">the username to search by</param>
            <returns>the user with the given username</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.AddAddress(OnlineShop.Common.DbModels.Addresses)">
             <summary>
             adds an address for a registered user
             </summary>
             <param name="addressModel">address form</param>
             <returns>address</returns>
            <remarks>
             sample request (this request adds new address)\
             POST  /users/address\
             {\
                 "Country" : "sampleCountry",\
                 "State" : "sampleState",\
                 "City" : "sampleCity",\
                 "Street" : "sampleStreet",\
                 "Zip" : "sampleZip",\
                 "Phone" : "samplePhone",
            }
             </remarks>>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.Address(System.Int32)">
            <summary>
            gets the address by Id
            </summary>
            <param name="id">address Id</param>
            <returns>address if found</returns>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.UpdateAddress(System.Int32,OnlineShop.Common.DbModels.Addresses)">
             <summary>
             updates existing address
             </summary>
             <param name="addressId">id of the address to be updated</param>
             <param name="address">model for update info</param>
             <remarks>
             sample request (this request adds new address)\
             PUT  /users/updateAddress\
             {\
                 "Country" : "sampleCountry",\
                 "State" : "sampleState",\
                 "City" : "sampleCity",\
                 "Street" : "sampleStreet",\
                 "Zip" : "sampleZip",\
                 "Phone" : "samplePhone",
            }
             </remarks>>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.RemoveAddress(System.Int32)">
            <summary>
            deletes existing address
            </summary>
            <param name="id">id of the address to be deleted</param>
        </member>
        <member name="M:OnlineShop.Api.Controllers.UsersController.UpdateUserByAddress(System.Int32,System.Int32)">
            <summary>
            attached address to an existing user
            </summary>
            <param name="addressId">id of the address to be attached</param>
            <param name="userId">id of the user of the address</param>
            <returns>updated user with address Id</returns>
        </member>
    </members>
</doc>
